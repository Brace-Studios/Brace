plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
}

group maven_group
version project_version

if (build_number != "undefined") {
    version += "+build.${build_number}"
}

repositories {
    maven {
        url "https://libraries.minecraft.net"
    }
    mavenCentral()
}

dependencies {
    api "com.mojang:brigadier:${brigadier_version}"
    api "com.mojang:logging:${logging_version}"
    api "com.mojang:text2speech:${text2speech_version}"

    api "com.google.code.gson:gson:${gson_version}"

    api "commons-codec:commons-codec:1.15"
    api 'org.apache.commons:commons-collections4:4.3'
    api "org.apache.commons:commons-compress:1.21"
    api "org.apache.commons:commons-lang3:3.12.0"
    api "org.apache.commons:commons-parent:52"
    api "org.apache.commons:commons-text:1.3"
    api "org.apache.httpcomponents:httpcomponents-client:4.5.13"
    api "org.apache.httpcomponents:httpcomponents-core:4.4.14"
    api "org.apache.httpcomponents:httpclient:4.5.13"
    api "org.apache.httpcomponents:httpcore:4.4.14"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task docJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

java {
    archivesBaseName = project.archives_base_name
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.name,
                "Specification-Vendor"    : "Gugle",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project_version,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

javadoc {
    options.encoding "UTF-8"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            version project.version
            artifactId project.archivesBaseName
            from components.java
            artifact sourcesJar
            artifact docJar
        }
    }
    def ENV = System.getenv()
    if (ENV.MAVEN_URL) {
        repositories.maven {
            url ENV.MAVEN_URL
            credentials {
                username ENV.MAVEN_USERNAME
                password ENV.MAVEN_PASSWORD
            }
        }
    }
}
